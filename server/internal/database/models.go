// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Creator struct {
	ID        pgtype.UUID        `json:"id"`
	Username  string             `json:"username"`
	Pwd       string             `json:"pwd"`
	Profile   []byte             `json:"profile"`
	Role      string             `json:"role"`
	OrgID     pgtype.UUID        `json:"orgId"`
	Active    pgtype.Bool        `json:"active"`
	CreatedAt pgtype.Timestamptz `json:"createdAt"`
	DeletedAt pgtype.Timestamptz `json:"deletedAt"`
}

type CreatorList struct {
	CreatorID   pgtype.UUID        `json:"creatorId"`
	ListID      pgtype.UUID        `json:"listId"`
	Params      []byte             `json:"params"`
	CreatedAt   pgtype.Timestamptz `json:"createdAt"`
	LastUpdated pgtype.Timestamptz `json:"lastUpdated"`
}

type CreatorSession struct {
	ID        pgtype.UUID        `json:"id"`
	CreatorID pgtype.UUID        `json:"creatorId"`
	Jwt       string             `json:"jwt"`
	ExpiredAt pgtype.Timestamptz `json:"expiredAt"`
	CreatedAt pgtype.Timestamptz `json:"createdAt"`
}

type Fact struct {
	ID          pgtype.UUID        `json:"id"`
	Text        string             `json:"text"`
	HappenedAt  pgtype.Timestamptz `json:"happenedAt"`
	Location    pgtype.Text        `json:"location"`
	CreatorID   pgtype.UUID        `json:"creatorId"`
	CreatedAt   pgtype.Timestamptz `json:"createdAt"`
	LastUpdated pgtype.Timestamptz `json:"lastUpdated"`
	DeletedAt   pgtype.Timestamptz `json:"deletedAt"`
}

type Feed struct {
	ID        pgtype.UUID        `json:"id"`
	CreatorID pgtype.UUID        `json:"creatorId"`
	Content   []byte             `json:"content"`
	Seen      pgtype.Bool        `json:"seen"`
	CreatedAt pgtype.Timestamptz `json:"createdAt"`
	DeletedAt pgtype.Timestamptz `json:"deletedAt"`
}

type Funnel struct {
	ID          pgtype.UUID        `json:"id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	CreatorID   pgtype.UUID        `json:"creatorId"`
	CreatedAt   pgtype.Timestamptz `json:"createdAt"`
	DeletedAt   pgtype.Timestamptz `json:"deletedAt"`
}

type List struct {
	ID            pgtype.UUID        `json:"id"`
	Name          string             `json:"name"`
	Description   pgtype.Text        `json:"description"`
	FilterSetting []byte             `json:"filterSetting"`
	CreatorID     pgtype.UUID        `json:"creatorId"`
	CreatedAt     pgtype.Timestamptz `json:"createdAt"`
	LastUpdated   pgtype.Timestamptz `json:"lastUpdated"`
	DeletedAt     pgtype.Timestamptz `json:"deletedAt"`
}

type Obj struct {
	ID          pgtype.UUID        `json:"id"`
	Name        pgtype.Text        `json:"name"`
	Description pgtype.Text        `json:"description"`
	IDString    string             `json:"idString"`
	CreatorID   pgtype.UUID        `json:"creatorId"`
	CreatedAt   pgtype.Timestamptz `json:"createdAt"`
	DeletedAt   pgtype.Timestamptz `json:"deletedAt"`
}

type ObjFact struct {
	ObjID  pgtype.UUID `json:"objId"`
	FactID pgtype.UUID `json:"factId"`
}

type ObjStep struct {
	ObjID       pgtype.UUID        `json:"objId"`
	StepID      pgtype.UUID        `json:"stepId"`
	CreatedAt   pgtype.Timestamptz `json:"createdAt"`
	LastUpdated pgtype.Timestamptz `json:"lastUpdated"`
}

type ObjTag struct {
	ObjID pgtype.UUID `json:"objId"`
	TagID pgtype.UUID `json:"tagId"`
}

type ObjTask struct {
	ObjID  pgtype.UUID `json:"objId"`
	TaskID pgtype.UUID `json:"taskId"`
}

type ObjType struct {
	ID          pgtype.UUID        `json:"id"`
	Name        string             `json:"name"`
	Description string             `json:"description"`
	Fields      []byte             `json:"fields"`
	CreatorID   pgtype.UUID        `json:"creatorId"`
	CreatedAt   pgtype.Timestamptz `json:"createdAt"`
	DeletedAt   pgtype.Timestamptz `json:"deletedAt"`
}

// This table has full-text search capabilities on its JSON data
type ObjTypeValue struct {
	ID          pgtype.UUID        `json:"id"`
	ObjID       pgtype.UUID        `json:"objId"`
	TypeID      pgtype.UUID        `json:"typeId"`
	Values      []byte             `json:"values"`
	CreatedAt   pgtype.Timestamptz `json:"createdAt"`
	LastUpdated pgtype.Timestamptz `json:"lastUpdated"`
	DeletedAt   pgtype.Timestamptz `json:"deletedAt"`
	// This column contains the tsvector for full-text search
	SearchVector interface{} `json:"searchVector"`
}

type Org struct {
	ID        pgtype.UUID        `json:"id"`
	Name      string             `json:"name"`
	Profile   []byte             `json:"profile"`
	CreatedAt pgtype.Timestamptz `json:"createdAt"`
	DeletedAt pgtype.Timestamptz `json:"deletedAt"`
}

type Step struct {
	ID          pgtype.UUID        `json:"id"`
	FunnelID    pgtype.UUID        `json:"funnelId"`
	Name        string             `json:"name"`
	Definition  pgtype.Text        `json:"definition"`
	Example     pgtype.Text        `json:"example"`
	Action      pgtype.Text        `json:"action"`
	ParentStep  pgtype.UUID        `json:"parentStep"`
	CreatedAt   pgtype.Timestamptz `json:"createdAt"`
	LastUpdated pgtype.Timestamptz `json:"lastUpdated"`
	DeletedAt   pgtype.Timestamptz `json:"deletedAt"`
}

type Tag struct {
	ID          pgtype.UUID        `json:"id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	ColorSchema []byte             `json:"colorSchema"`
	OrgID       pgtype.UUID        `json:"orgId"`
	CreatedAt   pgtype.Timestamptz `json:"createdAt"`
	DeletedAt   pgtype.Timestamptz `json:"deletedAt"`
}

type Task struct {
	ID          pgtype.UUID        `json:"id"`
	Content     string             `json:"content"`
	Deadline    pgtype.Timestamptz `json:"deadline"`
	RemindAt    pgtype.Timestamptz `json:"remindAt"`
	Status      string             `json:"status"`
	CreatorID   pgtype.UUID        `json:"creatorId"`
	AssignedID  pgtype.UUID        `json:"assignedId"`
	ParentID    pgtype.UUID        `json:"parentId"`
	CreatedAt   pgtype.Timestamptz `json:"createdAt"`
	LastUpdated pgtype.Timestamptz `json:"lastUpdated"`
	DeletedAt   pgtype.Timestamptz `json:"deletedAt"`
}
